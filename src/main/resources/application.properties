spring.application.name=myapp
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.jpa.hibernate.ddl-auto=update

#langchain4j.ollama.chat-model.model-name=llama3
#langchain4j.ollama.base-url=http://localhost:11434
#langchain4j.ollama.chat-model.temperature=0.2

#langchain4j.ollama.streaming-chat-model.model-name=llama3
#langchain4j.ollama.streaming-chat-model.temperature=0.2
#langchain4j.ollama.streaming-chat-model.timeout=60s
#langchain4j.ollama.embeddings-model.model-name=nomic-embed-text


#langchain4j.open-ai.embedding-model.api-key=${OPEN_AI_API_KEY}

# Logging properties
#langchain4j.open-ai.chat-model.log-requests=true
#langchain4j.open-ai.chat-model.log-responses=true

#langchain4j.open-ai.streaming-chat-model.log-requests=true
#langchain4j.open-ai.streaming-chat-model.log-responses=false

logging.level.dev.langchain4j=DEBUG
#logging.level.dev.ai4j.openai4j=DEBUG
logging.level.ai.djl=OFF
## For Uploads Limits
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# For Postgres Database
#spring.datasource.url=jdbc:postgresql://localhost:5432/agenticDb
#spring.datasource.username=admin
#spring.datasource.password=1234
#spring.jpa.hibernate.ddl-auto=create



#OPEN_AI_API_KEY=........
#langchain4j.open-ai.chat-model.model-name=gpt-4o
#langchain4j.open-ai.chat-model.api-key=${OPEN_AI_API_KEY}
#langchain4j.open-ai.chat-model.temperature=0
#
#langchain4j.open-ai.streaming-chat-model.model-name=gpt-4o
#langchain4j.open-ai.streaming-chat-model.api-key=${OPEN_AI_API_KEY}
#langchain4j.open-ai.streaming-chat-model.temperature=0
#

#langchain4j.open-ai.embedding-model.api-key=${OPEN_AI_API_KEY}
#
## Logging properties
#langchain4j.open-ai.chat-model.log-requests=true
#langchain4j.open-ai.chat-model.log-responses=true

#langchain4j.open-ai.streaming-chat-model.log-requests=true
#langchain4j.open-ai.streaming-chat-model.log-responses=false

management.endpoints.web.exposure.include=beans
management.endpoint.beans.enabled=true

